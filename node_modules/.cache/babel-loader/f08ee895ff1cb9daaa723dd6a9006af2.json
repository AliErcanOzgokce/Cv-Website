{"ast":null,"code":"import React from 'react'; // src/icon/index.ts\n\nvar matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nvar iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\n\nfunction fullIcon(data) {\n  return { ...iconDefaults,\n    ...data\n  };\n} // src/icon/name.ts\n\n\nvar stringToIcon = function (value, validate, allowSimpleName) {\n  let provider = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n  const colonSeparated = value.split(\":\");\n\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n\n    provider = colonSeparated.shift().slice(1);\n  }\n\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n\n  return null;\n};\n\nvar validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n}; // src/icon/merge.ts\n\n\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon\n  };\n\n  for (const key in iconDefaults) {\n    const prop = key;\n\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n\n  return result;\n} // src/icon-set/get-icon.ts\n\n\nfunction getIconData$1(data, name) {\n  let full = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  function getIcon(name2, iteration) {\n    var _a, _b, _c, _d;\n\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n\n    if (iteration > 5) {\n      return null;\n    }\n\n    if (((_a = data.aliases) == null ? void 0 : _a[name2]) !== void 0) {\n      const item = (_b = data.aliases) == null ? void 0 : _b[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n\n      return result2;\n    }\n\n    if (iteration === 0 && ((_c = data.chars) == null ? void 0 : _c[name2]) !== void 0) {\n      return getIcon((_d = data.chars) == null ? void 0 : _d[name2], iteration + 1);\n    }\n\n    return null;\n  }\n\n  const result = getIcon(name, 0);\n\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n\n  return result && full ? fullIcon(result) : result;\n} // src/icon-set/validate.ts\n\n\nvar matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\n\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n\n        break;\n\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n\n        break;\n\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n\n        break;\n\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n\n    }\n  }\n\n  return null;\n}\n\nfunction validateIconSet(obj, options) {\n  var _a;\n\n  const fix = !!(options == null ? void 0 : options.fix);\n\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n\n  const data = obj;\n\n  if (typeof (options == null ? void 0 : options.prefix) === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n\n  if (typeof (options == null ? void 0 : options.provider) === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n\n  const icons = data.icons;\n  Object.keys(icons).forEach(name => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n\n    const item = icons[name];\n\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n\n  if (data.not_found !== void 0 && !(data.not_found instanceof Array)) {\n    if (fix) {\n      delete data.not_found;\n    } else {\n      throw new Error(\"Invalid not_found list\");\n    }\n  }\n\n  if (!Object.keys(data.icons).length && !((_a = data.not_found) == null ? void 0 : _a.length)) {\n    throw new Error(\"Icon set is empty\");\n  }\n\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function (name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n\n      const item = aliases[name];\n\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n\n      const parent = item.parent;\n\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n\n      validatedAliases.add(name);\n      return true;\n    };\n\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach(name => {\n      validateAlias(name, 0);\n    });\n\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n\n  Object.keys(iconDefaults).forEach(prop => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach(char => {\n      var _a2;\n\n      if (!char.match(matchChar) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n\n      const target = chars[char];\n\n      if (data.icons[target] === void 0 && ((_a2 = data.aliases) == null ? void 0 : _a2[target]) === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n\n  return data;\n} // src/icon-set/parse.ts\n\n\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n\n  const validate = options.validate;\n\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : {\n        fix: true\n      });\n    } catch (err) {\n      return names;\n    }\n  }\n\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach(name => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n\n  const icons = data.icons;\n  Object.keys(icons).forEach(name => {\n    const iconData = getIconData$1(data, name, true);\n\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach(name => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n\n      const iconData = getIconData$1(data, name, true);\n\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n\n  return names;\n} // src/storage/storage.ts\n\n\nvar storageVersion = 1;\nvar storage$1 = Object.create(null);\n\ntry {\n  const w = window || self;\n\n  if ((w == null ? void 0 : w._iconifyStorage.version) === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {}\n\nfunction shareStorage() {\n  try {\n    const w = window || self;\n\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {}\n}\n\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: Object.create(null),\n    missing: Object.create(null)\n  };\n}\n\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = Object.create(null);\n  }\n\n  const providerStorage = storage$1[provider];\n\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n\n  return providerStorage[prefix];\n}\n\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\n\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {}\n\n  return false;\n}\n\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\n\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n\n  providers.forEach(provider2 => {\n    let prefixes;\n\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n\n    prefixes.forEach(prefix2 => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map(name => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n} // src/storage/functions.ts\n\n\nvar simpleNames = false;\n\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n\n  return simpleNames;\n}\n\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\n\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n\n  if (!icon) {\n    return false;\n  }\n\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\n\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\n\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\n\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result\n  } : null;\n} // src/customisations/index.ts\n\n\nvar defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\n\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n\n    if (item[attr] === void 0) {\n      continue;\n    }\n\n    const value = item[attr];\n\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n\n        break;\n\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n\n        break;\n\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n\n        break;\n    }\n  }\n\n  return result;\n} // src/svg/size.ts\n\n\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n\n  precision = precision === void 0 ? 100 : precision;\n\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n\n  if (typeof size !== \"string\") {\n    return size;\n  }\n\n  const oldParts = size.split(unitsSplit);\n\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n\n    code = oldParts.shift();\n\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n\n    isNumber = !isNumber;\n  }\n} // src/svg/build.ts\n\n\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n\n    case \"right\":\n      result += \"xMax\";\n      break;\n\n    default:\n      result += \"xMid\";\n  }\n\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n\n    default:\n      result += \"YMid\";\n  }\n\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\n\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left) + \" \" + (0 - box.top) + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left) + \" \" + (box.height + box.top) + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n\n    let tempValue;\n\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n\n    rotation = rotation % 4;\n\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left) + \" \" + (box.height / 2 + box.top) + \")\");\n        break;\n\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n    }\n\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n\n  if (width === \"auto\") {\n    width = box.width;\n  }\n\n  if (height === \"auto\") {\n    height = box.height;\n  }\n\n  width = typeof width === \"string\" ? width : width + \"\";\n  height = typeof height === \"string\" ? height : height + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left + \" \" + box.top + \" \" + box.width + \" \" + box.height\n    },\n    body\n  };\n\n  if (customisations.inline) {\n    result.inline = true;\n  }\n\n  return result;\n} // src/builder/functions.ts\n\n\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n} // src/svg/id.ts\n\n\nvar regex = /\\sid=\"(\\S+)\"/g;\nvar randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nvar counter = 0;\n\nfunction replaceIDs(body) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : randomPrefix;\n  const ids = [];\n  let match;\n\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n\n  if (!ids.length) {\n    return body;\n  }\n\n  ids.forEach(id => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + counter++;\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n} // src/api/modules.ts\n\n\nvar storage = Object.create(null);\n\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\n\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n} // src/api/config.ts\n\n\nfunction createAPIConfig(source) {\n  let resources;\n\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\n\nvar configStorage = Object.create(null);\nvar fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nvar fallBackAPI = [];\n\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\n\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\n\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n\n  if (config === null) {\n    return false;\n  }\n\n  configStorage[provider] = config;\n  return true;\n}\n\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\n\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n} // src/api/params.ts\n\n\nvar mergeParams = (base, params) => {\n  let result = base,\n      hasParams = result.indexOf(\"?\") !== -1;\n\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n\n      case \"number\":\n        return encodeURIComponent(value);\n\n      case \"string\":\n        return encodeURIComponent(value);\n\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n\n  Object.keys(params).forEach(key => {\n    let value;\n\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n}; // src/api/modules/fetch.ts\n\n\nvar maxLengthCache = Object.create(null);\nvar pathCache = Object.create(null);\n\nvar detectFetch = () => {\n  let callback;\n\n  try {\n    callback = fetch;\n\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {}\n\n  return null;\n};\n\nvar fetchModule = detectFetch();\n\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\n\nfunction getFetch() {\n  return fetchModule;\n}\n\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n\n  if (!config) {\n    return 0;\n  }\n\n  let result;\n\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\n\nfunction shouldAbort(status) {\n  return status === 404;\n}\n\nvar prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\n\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n\n      if (!config) {\n        return \"/\";\n      }\n\n      pathCache[provider] = config.path;\n    }\n\n    return pathCache[provider];\n  }\n\n  return \"/\";\n}\n\nvar send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n\n  let path = getPath(params.provider);\n\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        path += mergeParams(prefix + \".json\", {\n          icons: iconsList\n        });\n        break;\n      }\n\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\n\nvar fetchAPIModule = {\n  prepare,\n  send\n}; // src/icon/sort.ts\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n\n    if (storage[provider] === void 0) {\n      storage[provider] = Object.create(null);\n    }\n\n    const providerStorage = storage[provider];\n\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n\n    const localStorage = providerStorage[prefix];\n    let list;\n\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n} // src/api/callbacks.ts\n\n\nvar callbacks = Object.create(null);\nvar pendingUpdates = Object.create(null);\n\nfunction removeCallback(sources, id) {\n  sources.forEach(source => {\n    const provider = source.provider;\n\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n\n    if (items) {\n      providerCallbacks[prefix] = items.filter(row => row.id !== id);\n    }\n  });\n}\n\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = Object.create(null);\n  }\n\n  const providerPendingUpdates = pendingUpdates[provider];\n\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n\n      const items = callbacks[provider][prefix].slice(0);\n\n      if (!items.length) {\n        return;\n      }\n\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n\n          const name = icon.name;\n\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([{\n              provider,\n              prefix\n            }], item.id);\n          }\n\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\n\nvar idCounter = 0;\n\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n\n  if (!icons.pending.length) {\n    return abort;\n  }\n\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(source => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = Object.create(null);\n    }\n\n    const providerCallbacks = callbacks[provider];\n\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n} // src/icon/list.ts\n\n\nfunction listToIcons(list) {\n  let validate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  let simpleNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n} // src/config.ts\n\n\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n}; // src/query.ts\n\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n\n    switch (status) {\n      case \"pending\":\n        break;\n\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n\n        break;\n\n      default:\n        return;\n    }\n\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n\n    if (isError) {\n      lastError = data;\n\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n\n      return;\n    }\n\n    resetTimer();\n    clearQueue();\n\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n\n    resetTimer();\n    const resource = resources.shift();\n\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n\n      failQuery();\n      return;\n    }\n\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n\n  setTimeout(execNext);\n  return getQueryStatus;\n} // src/index.ts\n\n\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n\n  const newConfig = /* @__PURE__ */Object.create(null);\n  let key;\n\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n\n  return newConfig;\n}\n\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n\n  function find(callback) {\n    const result = queries.find(value => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n} // src/api/query.ts\n\n\nfunction emptyCallback$1() {}\n\nvar redundancyCache = Object.create(null);\n\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n\n    if (!config) {\n      return;\n    }\n\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n\n  return redundancyCache[provider];\n}\n\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n\n    send = api.send;\n    const cached = getRedundancyCache(target);\n\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n\n  return redundancy.query(query, send, callback)().abort;\n} // src/cache.ts\n\n\nvar cache = {}; // src/api/icons.ts\n\nfunction emptyCallback() {}\n\nvar pendingIcons = Object.create(null);\nvar iconsToLoad = Object.create(null);\nvar loaderFlags = Object.create(null);\nvar queueFlags = Object.create(null);\n\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = Object.create(null);\n  }\n\n  const providerLoaderFlags = loaderFlags[provider];\n\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\n\nvar errorsCache = Object.create(null);\n\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = Object.create(null);\n  }\n\n  const providerIconsToLoad = iconsToLoad[provider];\n\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = Object.create(null);\n  }\n\n  const providerQueueFlags = queueFlags[provider];\n\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = Object.create(null);\n  }\n\n  const providerPendingIcons = pendingIcons[provider];\n\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n\n      if (!api) {\n        err();\n        return;\n      }\n\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n\n            const t = Date.now();\n            item.icons.forEach(name => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n\n              if (!parsed.length) {\n                return;\n              }\n\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach(name => {\n                delete pending[name];\n              });\n\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\n\nvar loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n\n    return () => {\n      callCallback = false;\n    };\n  }\n\n  const newIcons = Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = Object.create(null);\n    }\n\n    const providerPendingIcons = pendingIcons[provider];\n\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = Object.create(null);\n    }\n\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = Object.create(null);\n    }\n\n    const providerNewIcons = newIcons[provider];\n\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach(icon => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(source => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n\nvar iconsQueue = Object.create(null);\n\nvar loadIcon = icon => {\n  if (typeof icon === \"string\" && iconsQueue[icon]) {\n    return iconsQueue[icon];\n  }\n\n  const result = new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n\n      reject(icon);\n    });\n  });\n\n  if (typeof icon === \"string\") {\n    iconsQueue[icon] = result;\n  }\n\n  return result;\n}; // src/browser-storage/index.ts\n\n\nvar cacheVersion = \"iconify2\";\nvar cachePrefix = \"iconify\";\nvar countKey = cachePrefix + \"-count\";\nvar versionKey = cachePrefix + \"-version\";\nvar hour = 36e5;\nvar cacheExpiration = 168;\nvar config = {\n  local: true,\n  session: true\n};\nvar loaded = false;\nvar count = {\n  local: 0,\n  session: 0\n};\nvar emptyList = {\n  local: [],\n  session: []\n};\n\nvar _window = typeof window === \"undefined\" ? {} : window;\n\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {}\n\n  config[key] = false;\n  return null;\n}\n\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value + \"\");\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n\n  return 0;\n}\n\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {}\n\n  setCount(storage, key, 0);\n}\n\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i);\n    }\n  } catch (err) {}\n}\n\nvar loadCache = () => {\n  if (loaded) {\n    return;\n  }\n\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n\n  function load(key) {\n    const func = getGlobal(key);\n\n    if (!func) {\n      return;\n    }\n\n    const getItem = index => {\n      const name = cachePrefix + index;\n      const item = func.getItem(name);\n\n      if (typeof item !== \"string\") {\n        return false;\n      }\n\n      let valid = true;\n\n      try {\n        const data = JSON.parse(item);\n\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n\n      if (!valid) {\n        func.removeItem(name);\n      }\n\n      return valid;\n    };\n\n    try {\n      const version = func.getItem(versionKey);\n\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n\n        initCache(func, key);\n        return;\n      }\n\n      let total = getCount(func);\n\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n\n      setCount(func, key, total);\n    } catch (err) {}\n  }\n\n  for (const key in config) {\n    load(key);\n  }\n};\n\nvar storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n\n    const func = getGlobal(key);\n\n    if (!func) {\n      return false;\n    }\n\n    let index = emptyList[key].shift();\n\n    if (index === void 0) {\n      index = count[key];\n\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index, JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n\n    return true;\n  }\n\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}; // src/browser-storage/functions.ts\n\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n\n      break;\n  }\n} // src/customisations/shorthand.ts\n\n\nvar separator = /[\\s,]+/;\n\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach(str => {\n    const value = str.trim();\n\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n} // src/customisations/rotate.ts\n\n\nfunction rotateFromString(value) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n\n    return value2 % 4;\n  }\n\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n\n      case \"deg\":\n        split = 90;\n    }\n\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n\n      if (isNaN(num)) {\n        return 0;\n      }\n\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n\n  return defaultValue;\n}\n/**\n * Default SVG attributes\n */\n\n\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img',\n  'style': {} // Include style if it isn't set to add verticalAlign later\n\n};\n/**\n * Default values for customisations for inline icon\n */\n\nconst inlineDefaults = { ...defaults,\n  inline: true\n};\n/**\n * Render icon\n */\n\nconst render = ( // Icon must be validated before calling this function\nicon, // Partial properties\nprops, // True if icon should have vertical-align added\ninline, // Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n  // Get default properties\n  const defaultProps = inline ? inlineDefaults : defaults; // Get all customisations\n\n  const customisations = mergeCustomisations(defaultProps, props); // Create style\n\n  const style = typeof props.style === 'object' && props.style !== null ? props.style : {}; // Create SVG component properties\n\n  const componentProps = { ...svgDefaults,\n    ref,\n    style\n  }; // Get element properties\n\n  for (let key in props) {\n    const value = props[key];\n\n    if (value === void 0) {\n      continue;\n    }\n\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'children':\n      case 'onLoad':\n      case '_ref':\n      case '_inline':\n        break;\n      // Boolean attributes\n\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n\n      case 'flip':\n        if (typeof value === 'string') {\n          flipFromString(customisations, value);\n        }\n\n        break;\n      // Alignment as string\n\n      case 'align':\n        if (typeof value === 'string') {\n          alignmentFromString(customisations, value);\n        }\n\n        break;\n      // Color: copy to style\n\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations[key] = rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations[key] = value;\n        }\n\n        break;\n      // Remove aria-hidden\n\n      case 'ariaHidden':\n      case 'aria-hidden':\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n\n        break;\n      // Copy missing property if it does not exist in customisations\n\n      default:\n        if (defaultProps[key] === void 0) {\n          componentProps[key] = value;\n        }\n\n    }\n  } // Generate icon\n\n\n  const item = iconToSVG(icon, customisations); // Counter for ids based on \"id\" property to render icons consistently on server and client\n\n  let localCounter = 0;\n  let id = props.id;\n\n  if (typeof id === 'string') {\n    // Convert '-' to '_' to avoid errors in animations\n    id = id.replace(/-/g, '_');\n  } // Add icon stuff\n\n\n  componentProps.dangerouslySetInnerHTML = {\n    __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')\n  };\n\n  for (let key in item.attributes) {\n    componentProps[key] = item.attributes[key];\n  }\n\n  if (item.inline && style.verticalAlign === void 0) {\n    style.verticalAlign = '-0.125em';\n  }\n\n  return React.createElement('svg', componentProps);\n};\n/**\n * Enable cache\n */\n\n\nfunction enableCache(storage) {\n  toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\n\n\nfunction disableCache(storage) {\n  toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\n\n\nallowSimpleNames(true); // Set API module\n\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // Set cache and load existing cache\n  cache.store = storeCache;\n  loadCache();\n  const _window = window; // Load icons from global \"IconifyPreload\"\n\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if ( // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array || // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' || // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  } // Set API from global \"IconifyProviders\"\n\n\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n\n        try {\n          const value = providers[key];\n\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n\n          if (!addAPIProvider(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\n\nclass IconComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Render placeholder before component is mounted\n      icon: null\n    };\n  }\n  /**\n   * Abort loading icon\n   */\n\n\n  _abortLoading() {\n    if (this._loading) {\n      this._loading.abort();\n\n      this._loading = null;\n    }\n  }\n  /**\n   * Update state\n   */\n\n\n  _setData(icon) {\n    if (this.state.icon !== icon) {\n      this.setState({\n        icon\n      });\n    }\n  }\n  /**\n   * Check if icon should be loaded\n   */\n\n\n  _checkIcon(changed) {\n    const state = this.state;\n    const icon = this.props.icon; // Icon is an object\n\n    if (typeof icon === 'object' && icon !== null && typeof icon.body === 'string') {\n      // Stop loading\n      this._icon = '';\n\n      this._abortLoading();\n\n      if (changed || state.icon === null) {\n        // Set data if it was changed\n        this._setData({\n          data: fullIcon(icon)\n        });\n      }\n\n      return;\n    } // Invalid icon?\n\n\n    let iconName;\n\n    if (typeof icon !== 'string' || (iconName = stringToIcon(icon, false, true)) === null) {\n      this._abortLoading();\n\n      this._setData(null);\n\n      return;\n    } // Load icon\n\n\n    const data = getIconData(iconName);\n\n    if (data === null) {\n      // Icon needs to be loaded\n      if (!this._loading || this._loading.name !== icon) {\n        // New icon to load\n        this._abortLoading();\n\n        this._icon = '';\n\n        this._setData(null);\n\n        this._loading = {\n          name: icon,\n          abort: loadIcons([iconName], this._checkIcon.bind(this, false))\n        };\n      }\n\n      return;\n    } // Icon data is available\n\n\n    if (this._icon !== icon || state.icon === null) {\n      // New icon or icon has been loaded\n      this._abortLoading();\n\n      this._icon = icon; // Add classes\n\n      const classes = ['iconify'];\n\n      if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n      }\n\n      if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n      } // Set data\n\n\n      this._setData({\n        data,\n        classes\n      });\n\n      if (this.props.onLoad) {\n        this.props.onLoad(icon);\n      }\n    }\n  }\n  /**\n   * Component mounted\n   */\n\n\n  componentDidMount() {\n    this._checkIcon(false);\n  }\n  /**\n   * Component updated\n   */\n\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.icon !== this.props.icon) {\n      this._checkIcon(true);\n    }\n  }\n  /**\n   * Abort loading\n   */\n\n\n  componentWillUnmount() {\n    this._abortLoading();\n  }\n  /**\n   * Render\n   */\n\n\n  render() {\n    const props = this.props;\n    const icon = this.state.icon;\n\n    if (icon === null) {\n      // Render placeholder\n      return props.children ? props.children : React.createElement('span', {});\n    } // Add classes\n\n\n    let newProps = props;\n\n    if (icon.classes) {\n      newProps = { ...props,\n        className: (typeof props.className === 'string' ? props.className + ' ' : '') + icon.classes.join(' ')\n      };\n    } // Render icon\n\n\n    return render(icon.data, newProps, props._inline, props._ref);\n  }\n\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\n\n\nconst Icon = React.forwardRef(function Icon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: false\n  };\n  return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\n\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: true\n  };\n  return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\n\nconst _api = {\n  getAPIConfig,\n  setAPIModule,\n  sendAPIQuery,\n  setFetch,\n  getFetch,\n  listAPIProviders,\n  mergeParams\n};\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };","map":{"version":3,"sources":["/Users/aliercanozgokce/Desktop/Cv-Website/node_modules/@iconify/react/dist/iconify.mjs"],"names":["React","matchName","iconDefaults","Object","freeze","left","top","width","height","rotate","vFlip","hFlip","fullIcon","data","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIcon","dashSeparated","join","icon","match","mergeIconData","alias","key","prop","getIconData$1","full","getIcon","iteration","_a","_b","_c","_d","icons","assign","aliases","item","result2","parent","chars","matchChar","validateIconProps","fix","attr","type","validateIconSet","obj","options","Error","keys","forEach","body","not_found","Array","validateAlias","validatedAliases","has","failedAliases","add","Set","expectedType","actualType","char","_a2","target","isVariation","parseIconSet","callback","names","err","push","iconData","parseAliases","storageVersion","storage$1","create","w","window","self","_iconifyStorage","version","storage","shareStorage","newStorage","missing","getStorage","providerStorage","addIconSet","storage2","t","Date","now","addIconToStorage","getIconFromStorage","listIcons","allIcons","providers","provider2","prefixes","prefix2","map","concat","simpleNames","allowSimpleNames","allow","getIconData","addIcon","addCollection","added","iconExists","defaults","inline","hAlign","vAlign","mergeCustomisations","defaults2","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","preserveAspectRatio","props","iconToSVG","customisations","box","transformations","rotation","tempValue","floor","unshift","attributes","viewBox","buildIcon","regex","randomPrefix","toString","random","counter","replaceIDs","ids","exec","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","listAPIProviders","mergeParams","base","params","hasParams","indexOf","paramToString","encodeURIComponent","maxLengthCache","pathCache","detectFetch","fetch","fetchModule","setFetch","fetch2","getFetch","calculateMaxLength","maxHostLength","host","max","url","cacheKey","shouldAbort","status","prepare","results","maxLength","getPath","send","iconsList","uri","defaultError","then","response","setTimeout","json","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","callbacks","pendingUpdates","removeCallback","sources","providerCallbacks","items","filter","row","updateCallbacks","providerPendingUpdates","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","resource","status2","setConfig","newConfig","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","api","cached","moduleKey","cache","emptyCallback","pendingIcons","iconsToLoad","loaderFlags","queueFlags","loadedNewIcons","providerLoaderFlags","errorsCache","loadNewIcons","time","console","providerIconsToLoad","providerQueueFlags","providerPendingIcons","icons2","parsed","store","err2","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","lastProvider","lastPrefix","providerNewIcons","pendingQueue","iconsQueue","loadIcon","Promise","fulfill","reject","iconObj","cacheVersion","cachePrefix","countKey","versionKey","hour","cacheExpiration","local","session","count","emptyList","_window","getGlobal","setCount","setItem","getCount","count2","getItem","total","parseInt","initCache","destroyCache","i","removeItem","loadCache","minTime","load","func","valid","JSON","parse","storeCache","stringify","toggleBrowserCache","separator","flipFromString","custom","flip","str","trim","alignmentFromString","align","rotateFromString","defaultValue","units","value2","svgDefaults","inlineDefaults","render","ref","defaultProps","style","componentProps","color","localCounter","dangerouslySetInnerHTML","__html","verticalAlign","createElement","enableCache","disableCache","document","IconifyPreload","preload","e","IconifyProviders","IconComponent","Component","constructor","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","iconName","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","children","newProps","className","_inline","_ref","Icon","forwardRef","InlineIcon","_api"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// src/icon/index.ts\nvar matchName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nvar iconDefaults = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16,\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nfunction fullIcon(data) {\n  return { ...iconDefaults, ...data };\n}\n\n// src/icon/name.ts\nvar stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIcon(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIcon(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nvar validateIcon = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchName)) && icon.name.match(matchName));\n};\n\n// src/icon/merge.ts\nfunction mergeIconData(icon, alias) {\n  const result = { ...icon };\n  for (const key in iconDefaults) {\n    const prop = key;\n    if (alias[prop] !== void 0) {\n      const value = alias[prop];\n      if (result[prop] === void 0) {\n        result[prop] = value;\n        continue;\n      }\n      switch (prop) {\n        case \"rotate\":\n          result[prop] = (result[prop] + value) % 4;\n          break;\n        case \"hFlip\":\n        case \"vFlip\":\n          result[prop] = value !== result[prop];\n          break;\n        default:\n          result[prop] = value;\n      }\n    }\n  }\n  return result;\n}\n\n// src/icon-set/get-icon.ts\nfunction getIconData$1(data, name, full = false) {\n  function getIcon(name2, iteration) {\n    var _a, _b, _c, _d;\n    if (data.icons[name2] !== void 0) {\n      return Object.assign({}, data.icons[name2]);\n    }\n    if (iteration > 5) {\n      return null;\n    }\n    if (((_a = data.aliases) == null ? void 0 : _a[name2]) !== void 0) {\n      const item = (_b = data.aliases) == null ? void 0 : _b[name2];\n      const result2 = getIcon(item.parent, iteration + 1);\n      if (result2) {\n        return mergeIconData(result2, item);\n      }\n      return result2;\n    }\n    if (iteration === 0 && ((_c = data.chars) == null ? void 0 : _c[name2]) !== void 0) {\n      return getIcon((_d = data.chars) == null ? void 0 : _d[name2], iteration + 1);\n    }\n    return null;\n  }\n  const result = getIcon(name, 0);\n  if (result) {\n    for (const key in iconDefaults) {\n      if (result[key] === void 0 && data[key] !== void 0) {\n        result[key] = data[key];\n      }\n    }\n  }\n  return result && full ? fullIcon(result) : result;\n}\n\n// src/icon-set/validate.ts\nvar matchChar = /^[a-f0-9]+(-[a-f0-9]+)*$/;\nfunction validateIconProps(item, fix) {\n  for (const key in item) {\n    const attr = key;\n    const value = item[attr];\n    const type = typeof value;\n    if (type === \"undefined\") {\n      delete item[attr];\n      continue;\n    }\n    switch (key) {\n      case \"body\":\n      case \"parent\":\n        if (type !== \"string\") {\n          return key;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n      case \"hidden\":\n        if (type !== \"boolean\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      case \"width\":\n      case \"height\":\n      case \"left\":\n      case \"top\":\n      case \"rotate\":\n      case \"inlineHeight\":\n      case \"inlineTop\":\n      case \"verticalAlign\":\n        if (type !== \"number\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n        break;\n      default:\n        if (type === \"object\") {\n          if (fix) {\n            delete item[attr];\n          } else {\n            return key;\n          }\n        }\n    }\n  }\n  return null;\n}\nfunction validateIconSet(obj, options) {\n  var _a;\n  const fix = !!(options == null ? void 0 : options.fix);\n  if (typeof obj !== \"object\" || obj === null || typeof obj.icons !== \"object\" || !obj.icons) {\n    throw new Error(\"Bad icon set\");\n  }\n  const data = obj;\n  if (typeof (options == null ? void 0 : options.prefix) === \"string\") {\n    data.prefix = options.prefix;\n  } else if (typeof data.prefix !== \"string\" || !data.prefix.match(matchName)) {\n    throw new Error(\"Invalid prefix\");\n  }\n  if (typeof (options == null ? void 0 : options.provider) === \"string\") {\n    data.provider = options.provider;\n  } else if (data.provider !== void 0) {\n    const value = data.provider;\n    if (typeof value !== \"string\" || value !== \"\" && !value.match(matchName)) {\n      if (fix) {\n        delete data.provider;\n      } else {\n        throw new Error(\"Invalid provider\");\n      }\n    }\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    if (!name.match(matchName)) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon name: \"${name}\"`);\n    }\n    const item = icons[name];\n    if (typeof item !== \"object\" || item === null || typeof item.body !== \"string\") {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid icon: \"${name}\"`);\n    }\n    const key = typeof item.parent === \"string\" ? \"parent\" : validateIconProps(item, fix);\n    if (key !== null) {\n      if (fix) {\n        delete icons[name];\n        return;\n      }\n      throw new Error(`Invalid property \"${key}\" in icon \"${name}\"`);\n    }\n  });\n  if (data.not_found !== void 0 && !(data.not_found instanceof Array)) {\n    if (fix) {\n      delete data.not_found;\n    } else {\n      throw new Error(\"Invalid not_found list\");\n    }\n  }\n  if (!Object.keys(data.icons).length && !((_a = data.not_found) == null ? void 0 : _a.length)) {\n    throw new Error(\"Icon set is empty\");\n  }\n  if (data.aliases !== void 0) {\n    if (typeof data.aliases !== \"object\" || data.aliases === null) {\n      if (fix) {\n        delete data.aliases;\n      } else {\n        throw new Error(\"Invalid aliases list\");\n      }\n    }\n  }\n  if (typeof data.aliases === \"object\") {\n    let validateAlias = function(name, iteration) {\n      if (validatedAliases.has(name)) {\n        return !failedAliases.has(name);\n      }\n      const item = aliases[name];\n      if (iteration > 5 || typeof item !== \"object\" || item === null || typeof item.parent !== \"string\" || !name.match(matchName)) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid icon alias: \"${name}\"`);\n      }\n      const parent = item.parent;\n      if (data.icons[parent] === void 0) {\n        if (aliases[parent] === void 0 || !validateAlias(parent, iteration + 1)) {\n          if (fix) {\n            delete aliases[name];\n            failedAliases.add(name);\n            return false;\n          }\n          throw new Error(`Missing parent icon for alias \"${name}`);\n        }\n      }\n      if (fix && item.body !== void 0) {\n        delete item.body;\n      }\n      const key = item.body !== void 0 ? \"body\" : validateIconProps(item, fix);\n      if (key !== null) {\n        if (fix) {\n          delete aliases[name];\n          failedAliases.add(name);\n          return false;\n        }\n        throw new Error(`Invalid property \"${key}\" in alias \"${name}\"`);\n      }\n      validatedAliases.add(name);\n      return true;\n    };\n    const aliases = data.aliases;\n    const validatedAliases = new Set();\n    const failedAliases = new Set();\n    Object.keys(aliases).forEach((name) => {\n      validateAlias(name, 0);\n    });\n    if (fix && !Object.keys(data.aliases).length) {\n      delete data.aliases;\n    }\n  }\n  Object.keys(iconDefaults).forEach((prop) => {\n    const expectedType = typeof iconDefaults[prop];\n    const actualType = typeof data[prop];\n    if (actualType !== \"undefined\" && actualType !== expectedType) {\n      throw new Error(`Invalid value type for \"${prop}\"`);\n    }\n  });\n  if (data.chars !== void 0) {\n    if (typeof data.chars !== \"object\" || data.chars === null) {\n      if (fix) {\n        delete data.chars;\n      } else {\n        throw new Error(\"Invalid characters map\");\n      }\n    }\n  }\n  if (typeof data.chars === \"object\") {\n    const chars = data.chars;\n    Object.keys(chars).forEach((char) => {\n      var _a2;\n      if (!char.match(matchChar) || typeof chars[char] !== \"string\") {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Invalid character \"${char}\"`);\n      }\n      const target = chars[char];\n      if (data.icons[target] === void 0 && ((_a2 = data.aliases) == null ? void 0 : _a2[target]) === void 0) {\n        if (fix) {\n          delete chars[char];\n          return;\n        }\n        throw new Error(`Character \"${char}\" points to missing icon \"${target}\"`);\n      }\n    });\n    if (fix && !Object.keys(data.chars).length) {\n      delete data.chars;\n    }\n  }\n  return data;\n}\n\n// src/icon-set/parse.ts\nfunction isVariation(item) {\n  for (const key in iconDefaults) {\n    if (item[key] !== void 0) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction parseIconSet(data, callback, options) {\n  options = options || {};\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  const validate = options.validate;\n  if (validate !== false) {\n    try {\n      validateIconSet(data, typeof validate === \"object\" ? validate : { fix: true });\n    } catch (err) {\n      return names;\n    }\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const icons = data.icons;\n  Object.keys(icons).forEach((name) => {\n    const iconData = getIconData$1(data, name, true);\n    if (iconData) {\n      callback(name, iconData);\n      names.push(name);\n    }\n  });\n  const parseAliases = options.aliases || \"all\";\n  if (parseAliases !== \"none\" && typeof data.aliases === \"object\") {\n    const aliases = data.aliases;\n    Object.keys(aliases).forEach((name) => {\n      if (parseAliases === \"variations\" && isVariation(aliases[name])) {\n        return;\n      }\n      const iconData = getIconData$1(data, name, true);\n      if (iconData) {\n        callback(name, iconData);\n        names.push(name);\n      }\n    });\n  }\n  return names;\n}\n\n// src/storage/storage.ts\nvar storageVersion = 1;\nvar storage$1 = Object.create(null);\ntry {\n  const w = window || self;\n  if ((w == null ? void 0 : w._iconifyStorage.version) === storageVersion) {\n    storage$1 = w._iconifyStorage.storage;\n  }\n} catch (err) {\n}\nfunction shareStorage() {\n  try {\n    const w = window || self;\n    if (w && !w._iconifyStorage) {\n      w._iconifyStorage = {\n        version: storageVersion,\n        storage: storage$1\n      };\n    }\n  } catch (err) {\n  }\n}\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: Object.create(null),\n    missing: Object.create(null)\n  };\n}\nfunction getStorage(provider, prefix) {\n  if (storage$1[provider] === void 0) {\n    storage$1[provider] = Object.create(null);\n  }\n  const providerStorage = storage$1[provider];\n  if (providerStorage[prefix] === void 0) {\n    providerStorage[prefix] = newStorage(provider, prefix);\n  }\n  return providerStorage[prefix];\n}\nfunction addIconSet(storage2, data) {\n  const t = Date.now();\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage2.icons[name] = icon;\n    } else {\n      storage2.missing[name] = t;\n    }\n  });\n}\nfunction addIconToStorage(storage2, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage2.icons[name] = Object.freeze(fullIcon(icon));\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction getIconFromStorage(storage2, name) {\n  const value = storage2.icons[name];\n  return value === void 0 ? null : value;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  let providers;\n  if (typeof provider === \"string\") {\n    providers = [provider];\n  } else {\n    providers = Object.keys(storage$1);\n  }\n  providers.forEach((provider2) => {\n    let prefixes;\n    if (typeof provider2 === \"string\" && typeof prefix === \"string\") {\n      prefixes = [prefix];\n    } else {\n      prefixes = storage$1[provider2] === void 0 ? [] : Object.keys(storage$1[provider2]);\n    }\n    prefixes.forEach((prefix2) => {\n      const storage2 = getStorage(provider2, prefix2);\n      const icons = Object.keys(storage2.icons).map((name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name);\n      allIcons = allIcons.concat(icons);\n    });\n  });\n  return allIcons;\n}\n\n// src/storage/functions.ts\nvar simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  return icon ? getIconFromStorage(getStorage(icon.provider, icon.prefix), icon.name) : null;\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = typeof data.provider === \"string\" ? data.provider : \"\";\n  }\n  if (simpleNames && provider === \"\" && (typeof data.prefix !== \"string\" || data.prefix === \"\")) {\n    let added = false;\n    parseIconSet(data, (name, icon) => {\n      if (icon && addIcon(name, icon)) {\n        added = true;\n      }\n    }, {\n      validate: {\n        fix: true,\n        prefix: \"\"\n      }\n    });\n    return added;\n  }\n  if (typeof data.prefix !== \"string\" || !validateIcon({\n    provider,\n    prefix: data.prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, data.prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return getIconData(name) !== null;\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...result } : null;\n}\n\n// src/customisations/index.ts\nvar defaults = Object.freeze({\n  inline: false,\n  width: null,\n  height: null,\n  hAlign: \"center\",\n  vAlign: \"middle\",\n  slice: false,\n  hFlip: false,\n  vFlip: false,\n  rotate: 0\n});\nfunction mergeCustomisations(defaults2, item) {\n  const result = {};\n  for (const key in defaults2) {\n    const attr = key;\n    result[attr] = defaults2[attr];\n    if (item[attr] === void 0) {\n      continue;\n    }\n    const value = item[attr];\n    switch (attr) {\n      case \"inline\":\n      case \"slice\":\n        if (typeof value === \"boolean\") {\n          result[attr] = value;\n        }\n        break;\n      case \"hFlip\":\n      case \"vFlip\":\n        if (value === true) {\n          result[attr] = !result[attr];\n        }\n        break;\n      case \"hAlign\":\n      case \"vAlign\":\n        if (typeof value === \"string\" && value !== \"\") {\n          result[attr] = value;\n        }\n        break;\n      case \"width\":\n      case \"height\":\n        if (typeof value === \"string\" && value !== \"\" || typeof value === \"number\" && value || value === null) {\n          result[attr] = value;\n        }\n        break;\n      case \"rotate\":\n        if (typeof value === \"number\") {\n          result[attr] += value;\n        }\n        break;\n    }\n  }\n  return result;\n}\n\n// src/svg/size.ts\nvar unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nvar unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision === void 0 ? 100 : precision;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\n// src/svg/build.ts\nfunction preserveAspectRatio(props) {\n  let result = \"\";\n  switch (props.hAlign) {\n    case \"left\":\n      result += \"xMin\";\n      break;\n    case \"right\":\n      result += \"xMax\";\n      break;\n    default:\n      result += \"xMid\";\n  }\n  switch (props.vAlign) {\n    case \"top\":\n      result += \"YMin\";\n      break;\n    case \"bottom\":\n      result += \"YMax\";\n      break;\n    default:\n      result += \"YMid\";\n  }\n  result += props.slice ? \" slice\" : \" meet\";\n  return result;\n}\nfunction iconToSVG(icon, customisations) {\n  const box = {\n    left: icon.left,\n    top: icon.top,\n    width: icon.width,\n    height: icon.height\n  };\n  let body = icon.body;\n  [icon, customisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left) + \" \" + (0 - box.top) + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left) + \" \" + (box.height + box.top) + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left) + \" \" + (box.height / 2 + box.top) + \")\");\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue + \" \" + tempValue + \")\");\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== 0 || box.top !== 0) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  let width, height;\n  if (customisations.width === null && customisations.height === null) {\n    height = \"1em\";\n    width = calculateSize(height, box.width / box.height);\n  } else if (customisations.width !== null && customisations.height !== null) {\n    width = customisations.width;\n    height = customisations.height;\n  } else if (customisations.height !== null) {\n    height = customisations.height;\n    width = calculateSize(height, box.width / box.height);\n  } else {\n    width = customisations.width;\n    height = calculateSize(width, box.height / box.width);\n  }\n  if (width === \"auto\") {\n    width = box.width;\n  }\n  if (height === \"auto\") {\n    height = box.height;\n  }\n  width = typeof width === \"string\" ? width : width + \"\";\n  height = typeof height === \"string\" ? height : height + \"\";\n  const result = {\n    attributes: {\n      width,\n      height,\n      preserveAspectRatio: preserveAspectRatio(customisations),\n      viewBox: box.left + \" \" + box.top + \" \" + box.width + \" \" + box.height\n    },\n    body\n  };\n  if (customisations.inline) {\n    result.inline = true;\n  }\n  return result;\n}\n\n// src/builder/functions.ts\nfunction buildIcon(icon, customisations) {\n  return iconToSVG(fullIcon(icon), customisations ? mergeCustomisations(defaults, customisations) : defaults);\n}\n\n// src/svg/id.ts\nvar regex = /\\sid=\"(\\S+)\"/g;\nvar randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nvar counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + counter++;\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + \"$3\");\n  });\n  return body;\n}\n\n// src/api/modules.ts\nvar storage = Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\n// src/api/config.ts\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path === void 0 ? \"/\" : source.path,\n    maxURL: source.maxURL ? source.maxURL : 500,\n    rotate: source.rotate ? source.rotate : 750,\n    timeout: source.timeout ? source.timeout : 5e3,\n    random: source.random === true,\n    index: source.index ? source.index : 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nvar configStorage = Object.create(null);\nvar fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nvar fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\n// src/api/params.ts\nvar mergeParams = (base, params) => {\n  let result = base, hasParams = result.indexOf(\"?\") !== -1;\n  function paramToString(value) {\n    switch (typeof value) {\n      case \"boolean\":\n        return value ? \"true\" : \"false\";\n      case \"number\":\n        return encodeURIComponent(value);\n      case \"string\":\n        return encodeURIComponent(value);\n      default:\n        throw new Error(\"Invalid parameter\");\n    }\n  }\n  Object.keys(params).forEach((key) => {\n    let value;\n    try {\n      value = paramToString(params[key]);\n    } catch (err) {\n      return;\n    }\n    result += (hasParams ? \"&\" : \"?\") + encodeURIComponent(key) + \"=\" + value;\n    hasParams = true;\n  });\n  return result;\n};\n\n// src/api/modules/fetch.ts\nvar maxLengthCache = Object.create(null);\nvar pathCache = Object.create(null);\nvar detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n  return null;\n};\nvar fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = mergeParams(prefix + \".json\", {\n      icons: \"\"\n    });\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  const cacheKey = provider + \":\" + prefix;\n  pathCache[provider] = config.path;\n  maxLengthCache[cacheKey] = result;\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nvar prepare = (provider, prefix, icons) => {\n  const results = [];\n  let maxLength = maxLengthCache[prefix];\n  if (maxLength === void 0) {\n    maxLength = calculateMaxLength(provider, prefix);\n  }\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    if (pathCache[provider] === void 0) {\n      const config = getAPIConfig(provider);\n      if (!config) {\n        return \"/\";\n      }\n      pathCache[provider] = config.path;\n    }\n    return pathCache[provider];\n  }\n  return \"/\";\n}\nvar send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      path += mergeParams(prefix + \".json\", {\n        icons: iconsList\n      });\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        callback(\"next\", defaultError);\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nvar fetchAPIModule = {\n  prepare,\n  send\n};\n\n// src/icon/sort.ts\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    if (storage[provider] === void 0) {\n      storage[provider] = Object.create(null);\n    }\n    const providerStorage = storage[provider];\n    if (providerStorage[prefix] === void 0) {\n      providerStorage[prefix] = getStorage(provider, prefix);\n    }\n    const localStorage = providerStorage[prefix];\n    let list;\n    if (localStorage.icons[name] !== void 0) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing[name] !== void 0) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\n// src/api/callbacks.ts\nvar callbacks = Object.create(null);\nvar pendingUpdates = Object.create(null);\nfunction removeCallback(sources, id) {\n  sources.forEach((source) => {\n    const provider = source.provider;\n    if (callbacks[provider] === void 0) {\n      return;\n    }\n    const providerCallbacks = callbacks[provider];\n    const prefix = source.prefix;\n    const items = providerCallbacks[prefix];\n    if (items) {\n      providerCallbacks[prefix] = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(provider, prefix) {\n  if (pendingUpdates[provider] === void 0) {\n    pendingUpdates[provider] = Object.create(null);\n  }\n  const providerPendingUpdates = pendingUpdates[provider];\n  if (!providerPendingUpdates[prefix]) {\n    providerPendingUpdates[prefix] = true;\n    setTimeout(() => {\n      providerPendingUpdates[prefix] = false;\n      if (callbacks[provider] === void 0 || callbacks[provider][prefix] === void 0) {\n        return;\n      }\n      const items = callbacks[provider][prefix].slice(0);\n      if (!items.length) {\n        return;\n      }\n      const storage = getStorage(provider, prefix);\n      let hasPending = false;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name] !== void 0) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing[name] !== void 0) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([\n              {\n                provider,\n                prefix\n              }\n            ], item.id);\n          }\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\nvar idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (callbacks[provider] === void 0) {\n      callbacks[provider] = Object.create(null);\n    }\n    const providerCallbacks = callbacks[provider];\n    if (providerCallbacks[prefix] === void 0) {\n      providerCallbacks[prefix] = [];\n    }\n    providerCallbacks[prefix].push(item);\n  });\n  return abort;\n}\n\n// src/icon/list.ts\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, false, simpleNames) : item;\n    if (!validate || validateIcon(icon, simpleNames)) {\n      result.push({\n        provider: icon.provider,\n        prefix: icon.prefix,\n        name: icon.name\n      });\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction setConfig(config) {\n  if (typeof config !== \"object\" || typeof config.resources !== \"object\" || !(config.resources instanceof Array) || !config.resources.length) {\n    throw new Error(\"Invalid Reduncancy configuration\");\n  }\n  const newConfig = /* @__PURE__ */ Object.create(null);\n  let key;\n  for (key in defaultConfig) {\n    if (config[key] !== void 0) {\n      newConfig[key] = config[key];\n    } else {\n      newConfig[key] = defaultConfig[key];\n    }\n  }\n  return newConfig;\n}\nfunction initRedundancy(cfg) {\n  const config = setConfig(cfg);\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    const result = queries.find((value) => {\n      return callback(value);\n    });\n    return result !== void 0 ? result : null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\n// src/api/query.ts\nfunction emptyCallback$1() {\n}\nvar redundancyCache = Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (redundancyCache[provider] === void 0) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\n// src/cache.ts\nvar cache = {};\n\n// src/api/icons.ts\nfunction emptyCallback() {\n}\nvar pendingIcons = Object.create(null);\nvar iconsToLoad = Object.create(null);\nvar loaderFlags = Object.create(null);\nvar queueFlags = Object.create(null);\nfunction loadedNewIcons(provider, prefix) {\n  if (loaderFlags[provider] === void 0) {\n    loaderFlags[provider] = Object.create(null);\n  }\n  const providerLoaderFlags = loaderFlags[provider];\n  if (!providerLoaderFlags[prefix]) {\n    providerLoaderFlags[prefix] = true;\n    setTimeout(() => {\n      providerLoaderFlags[prefix] = false;\n      updateCallbacks(provider, prefix);\n    });\n  }\n}\nvar errorsCache = Object.create(null);\nfunction loadNewIcons(provider, prefix, icons) {\n  function err() {\n    const key = (provider === \"\" ? \"\" : \"@\" + provider + \":\") + prefix;\n    const time = Math.floor(Date.now() / 6e4);\n    if (errorsCache[key] < time) {\n      errorsCache[key] = time;\n      console.error('Unable to retrieve icons for \"' + key + '\" because API is not configured properly.');\n    }\n  }\n  if (iconsToLoad[provider] === void 0) {\n    iconsToLoad[provider] = Object.create(null);\n  }\n  const providerIconsToLoad = iconsToLoad[provider];\n  if (queueFlags[provider] === void 0) {\n    queueFlags[provider] = Object.create(null);\n  }\n  const providerQueueFlags = queueFlags[provider];\n  if (pendingIcons[provider] === void 0) {\n    pendingIcons[provider] = Object.create(null);\n  }\n  const providerPendingIcons = pendingIcons[provider];\n  if (providerIconsToLoad[prefix] === void 0) {\n    providerIconsToLoad[prefix] = icons;\n  } else {\n    providerIconsToLoad[prefix] = providerIconsToLoad[prefix].concat(icons).sort();\n  }\n  if (!providerQueueFlags[prefix]) {\n    providerQueueFlags[prefix] = true;\n    setTimeout(() => {\n      providerQueueFlags[prefix] = false;\n      const icons2 = providerIconsToLoad[prefix];\n      delete providerIconsToLoad[prefix];\n      const api = getAPIModule(provider);\n      if (!api) {\n        err();\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data, error) => {\n          const storage = getStorage(provider, prefix);\n          if (typeof data !== \"object\") {\n            if (error !== 404) {\n              return;\n            }\n            const t = Date.now();\n            item.icons.forEach((name) => {\n              storage.missing[name] = t;\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n              if (!parsed.length) {\n                return;\n              }\n              const pending = providerPendingIcons[prefix];\n              parsed.forEach((name) => {\n                delete pending[name];\n              });\n              if (cache.store) {\n                cache.store(provider, data);\n              }\n            } catch (err2) {\n              console.error(err2);\n            }\n          }\n          loadedNewIcons(provider, prefix);\n        });\n      });\n    });\n  }\n}\nvar loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push({\n      provider,\n      prefix\n    });\n    if (pendingIcons[provider] === void 0) {\n      pendingIcons[provider] = Object.create(null);\n    }\n    const providerPendingIcons = pendingIcons[provider];\n    if (providerPendingIcons[prefix] === void 0) {\n      providerPendingIcons[prefix] = Object.create(null);\n    }\n    if (newIcons[provider] === void 0) {\n      newIcons[provider] = Object.create(null);\n    }\n    const providerNewIcons = newIcons[provider];\n    if (providerNewIcons[prefix] === void 0) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  const time = Date.now();\n  sortedIcons.pending.forEach((icon) => {\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const pendingQueue = pendingIcons[provider][prefix];\n    if (pendingQueue[name] === void 0) {\n      pendingQueue[name] = time;\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((source) => {\n    const provider = source.provider;\n    const prefix = source.prefix;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(provider, prefix, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nvar iconsQueue = Object.create(null);\nvar loadIcon = (icon) => {\n  if (typeof icon === \"string\" && iconsQueue[icon]) {\n    return iconsQueue[icon];\n  }\n  const result = new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon) : icon;\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const storage = getStorage(iconObj.provider, iconObj.prefix);\n        const data = getIconFromStorage(storage, iconObj.name);\n        if (data) {\n          fulfill(data);\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n  if (typeof icon === \"string\") {\n    iconsQueue[icon] = result;\n  }\n  return result;\n};\n\n// src/browser-storage/index.ts\nvar cacheVersion = \"iconify2\";\nvar cachePrefix = \"iconify\";\nvar countKey = cachePrefix + \"-count\";\nvar versionKey = cachePrefix + \"-version\";\nvar hour = 36e5;\nvar cacheExpiration = 168;\nvar config = {\n  local: true,\n  session: true\n};\nvar loaded = false;\nvar count = {\n  local: 0,\n  session: 0\n};\nvar emptyList = {\n  local: [],\n  session: []\n};\nvar _window = typeof window === \"undefined\" ? {} : window;\nfunction getGlobal(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  config[key] = false;\n  return null;\n}\nfunction setCount(storage, key, value) {\n  try {\n    storage.setItem(countKey, value + \"\");\n    count[key] = value;\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nfunction getCount(storage) {\n  const count2 = storage.getItem(countKey);\n  if (count2) {\n    const total = parseInt(count2);\n    return total ? total : 0;\n  }\n  return 0;\n}\nfunction initCache(storage, key) {\n  try {\n    storage.setItem(versionKey, cacheVersion);\n  } catch (err) {\n  }\n  setCount(storage, key, 0);\n}\nfunction destroyCache(storage) {\n  try {\n    const total = getCount(storage);\n    for (let i = 0; i < total; i++) {\n      storage.removeItem(cachePrefix + i);\n    }\n  } catch (err) {\n  }\n}\nvar loadCache = () => {\n  if (loaded) {\n    return;\n  }\n  loaded = true;\n  const minTime = Math.floor(Date.now() / hour) - cacheExpiration;\n  function load(key) {\n    const func = getGlobal(key);\n    if (!func) {\n      return;\n    }\n    const getItem = (index) => {\n      const name = cachePrefix + index;\n      const item = func.getItem(name);\n      if (typeof item !== \"string\") {\n        return false;\n      }\n      let valid = true;\n      try {\n        const data = JSON.parse(item);\n        if (typeof data !== \"object\" || typeof data.cached !== \"number\" || data.cached < minTime || typeof data.provider !== \"string\" || typeof data.data !== \"object\" || typeof data.data.prefix !== \"string\") {\n          valid = false;\n        } else {\n          const provider = data.provider;\n          const prefix = data.data.prefix;\n          const storage = getStorage(provider, prefix);\n          valid = addIconSet(storage, data.data).length > 0;\n        }\n      } catch (err) {\n        valid = false;\n      }\n      if (!valid) {\n        func.removeItem(name);\n      }\n      return valid;\n    };\n    try {\n      const version = func.getItem(versionKey);\n      if (version !== cacheVersion) {\n        if (version) {\n          destroyCache(func);\n        }\n        initCache(func, key);\n        return;\n      }\n      let total = getCount(func);\n      for (let i = total - 1; i >= 0; i--) {\n        if (!getItem(i)) {\n          if (i === total - 1) {\n            total--;\n          } else {\n            emptyList[key].push(i);\n          }\n        }\n      }\n      setCount(func, key, total);\n    } catch (err) {\n    }\n  }\n  for (const key in config) {\n    load(key);\n  }\n};\nvar storeCache = (provider, data) => {\n  if (!loaded) {\n    loadCache();\n  }\n  function store(key) {\n    if (!config[key]) {\n      return false;\n    }\n    const func = getGlobal(key);\n    if (!func) {\n      return false;\n    }\n    let index = emptyList[key].shift();\n    if (index === void 0) {\n      index = count[key];\n      if (!setCount(func, key, index + 1)) {\n        return false;\n      }\n    }\n    try {\n      const item = {\n        cached: Math.floor(Date.now() / hour),\n        provider,\n        data\n      };\n      func.setItem(cachePrefix + index, JSON.stringify(item));\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n};\n\n// src/browser-storage/functions.ts\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      config[storage] = value;\n      break;\n    case \"all\":\n      for (const key in config) {\n        config[key] = value;\n      }\n      break;\n  }\n}\n\n// src/customisations/shorthand.ts\nvar separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\nfunction alignmentFromString(custom, align) {\n  align.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"left\":\n      case \"center\":\n      case \"right\":\n        custom.hAlign = value;\n        break;\n      case \"top\":\n      case \"middle\":\n      case \"bottom\":\n        custom.vAlign = value;\n        break;\n      case \"slice\":\n      case \"crop\":\n        custom.slice = true;\n        break;\n      case \"meet\":\n        custom.slice = false;\n    }\n  });\n}\n\n// src/customisations/rotate.ts\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n    'style': {}, // Include style if it isn't set to add verticalAlign later\n};\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = { ...defaults, inline: true };\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline ? inlineDefaults : defaults;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Create style\n    const style = typeof props.style === 'object' && props.style !== null\n        ? props.style\n        : {};\n    // Create SVG component properties\n    const componentProps = { ...svgDefaults, ref, style };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Alignment as string\n            case 'align':\n                if (typeof value === 'string') {\n                    alignmentFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    // Counter for ids based on \"id\" property to render icons consistently on server and client\n    let localCounter = 0;\n    let id = props.id;\n    if (typeof id === 'string') {\n        // Convert '-' to '_' to avoid errors in animations\n        id = id.replace(/-/g, '_');\n    }\n    // Add icon stuff\n    componentProps.dangerouslySetInnerHTML = {\n        __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'),\n    };\n    for (let key in item.attributes) {\n        componentProps[key] = item.attributes[key];\n    }\n    if (item.inline && style.verticalAlign === void 0) {\n        style.verticalAlign = '-0.125em';\n    }\n    return React.createElement('svg', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    cache.store = storeCache;\n    loadCache();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: fullIcon(icon),\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (data === null) {\n            // Icon needs to be loaded\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                this._loading = {\n                    name: icon,\n                    abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                };\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render(icon.data, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = { ...props, _ref: ref, _inline: true };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n    mergeParams,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs, shareStorage };\n"]},"metadata":{},"sourceType":"module"}